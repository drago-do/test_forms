diff --git a/src/app/api/excel/[idexport]/route.ts b/src/app/api/excel/[idexport]/route.ts
index 3abe753..8584824 100644
--- a/src/app/api/excel/[idexport]/route.ts
+++ b/src/app/api/excel/[idexport]/route.ts
@@ -78,7 +78,7 @@ const organizeDataWithoutPercentages = (preguntas, categorias, resultados) => {
 export async function GET(request, { params }) {
   console.log("Iniciando la exportación de resultados...");
 
-  const idPrueba = params.idExport || "";
+  const idPrueba = params.idexport || "";
   console.log(`ID de prueba recibido: ${idPrueba}`);
 
   // Validate 'idPrueba' parameter
@@ -236,11 +236,10 @@ export async function GET(request, { params }) {
       ]);
       hojaResultados["!merges"] = merges;
       XLSX.utils.book_append_sheet(workbook, hojaResultados, "Datos Generales");
-
       const hojaDatosIndividuales = XLSX.utils.json_to_sheet(
         await Promise.all(
           resultados.map(async (resultado) => {
-            const { id_user: user, respuestas = {} } = resultado;
+            const { id_user: user, respuestas } = resultado;
             const userInfo = {
               Nombre: (user as any).firstName || "",
               Apellido: (user as any).lastName || "",
@@ -258,19 +257,20 @@ export async function GET(request, { params }) {
             };
 
             const respuestasFormateadas = Object.fromEntries(
-              Object.entries(respuestas).map(([idPregunta, respuesta]) => {
+              Array.from(respuestas).map(([idPregunta, respuesta]) => {
                 const pregunta = preguntas.find(
                   (p) => p?._id.toString() === idPregunta
                 );
-                return [pregunta?.texto || `Pregunta ${idPregunta}`, respuesta]; // Solo guardamos el texto de la pregunta
+                return [pregunta?.texto || idPregunta, respuesta];
               })
             );
 
+
             const categoriasConNombres = {};
             categorias.forEach((categoria: any) => {
               categoriasConNombres[categoria.nombre] = ""; // Aquí solo se agrega el nombre de la categoría
             });
-
+            
             return {
               ...userInfo,
               ...respuestasFormateadas,
@@ -279,8 +279,9 @@ export async function GET(request, { params }) {
           })
         )
       );
-
-      console.log(hojaDatosIndividuales);
+      console.log(hojaDatosIndividuales)
+      
+      //console.log(hojaDatosIndividuales);
 
       // Modificar encabezados para incluir categorías
       const encabezadosIndividuales = [
